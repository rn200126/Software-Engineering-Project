#BlueJ class context
comment0.target=CluedoGameWindowLaunch
comment0.text=\r\n\ Main\ launcher\ class\ for\ the\ program.\ Handle\ all\ graphical\ elements\ and\ putting\r\n\ all\ the\ classes\ together\ to\ form\ a\ working\ game.\r\n\r\n\ @author\ Group31\r\n\ @version\ V.1\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Starts\ the\ game\ \r\n\ @param\ startGame\ starts\ game\ \r\n
comment10.params=
comment10.target=void\ playerMoveUp()
comment10.text=\r\n\ Lets\ the\ player\ move\ up\r\n\ @param\ currentTurn\ current\ turn\ \r\n
comment11.params=
comment11.target=void\ playerMoveDown()
comment11.text=\r\n\ \r\n\ Lets\ the\ player\ move\ down\r\n\ @param\ currentTurn\ current\ turn\r\n
comment12.params=
comment12.target=void\ playerMoveLeft()
comment12.text=\r\n\ Lets\ the\ player\ move\ left\r\n\ @param\ currentTurn\ current\ turn\r\n
comment13.params=
comment13.target=void\ playerMoveRight()
comment13.text=\r\n\ Lets\ the\ player\ move\ right\ \r\n\ @param\ currentTurn\ current\ turn\r\n
comment14.params=roomIndex
comment14.target=void\ roomSlotAssign(int)
comment14.text=\r\n\ Keeps\ check\ of\ which\ player\ occupies\ which\ room\ \r\n\ @param\ occupantName\ name\ of\ person\ in\ the\ room\ \r\n
comment15.params=doorID
comment15.target=java.lang.String\ getRoomTagFromDoor(java.lang.String)
comment15.text=\r\n\ \r\n\ Checks\ which\ room\ it\ is\ based\ on\ the\ door\ id\ \r\n\ @param\ doorID\ \ id\ of\ the\ door\ \r\n
comment16.params=playerName\ x\ y
comment16.target=void\ movePlayer(java.lang.String,\ int,\ int)
comment16.text=\r\n\ \r\n\ Sets\ position\ of\ the\ player\ to\ the\ given\ position\ \ \r\n\ @param\ playerName\ name\ of\ the\ player\ \r\n
comment17.params=
comment17.target=void\ handOutCards()
comment17.text=\r\n\ Distributes\ the\ cards\ to\ the\ players\ \r\n\ @param\ giveOutClueCard\ clue\ card\ \r\n
comment18.params=currentTurnInput
comment18.target=void\ CluedoGameWindow(java.lang.String)
comment19.params=
comment19.target=void\ refreshWindow()
comment19.text=\r\n\ Refreshes\ the\ window\r\n\ @param\ cluedoGameWindowInstance\ instance\ window\ \r\n
comment2.params=
comment2.target=CluedoGameWindowLaunch()
comment2.text=\r\n\ Initialises\ Level\ and\ Board,\ room\ with\ boards,\ all\ person,\ weapons,\ rooms\ objects\r\n\ Murder\ Envelope\ initialised,\ with\ random\ Person,\ Weapon,\ Room\ \r\n\ Remaining\ "cards"\ (representing\ players,\ rooms,\ weapons)\ are\ all\ assigned\ to\ players\ until\ no\ more\ cards\ left\r\n\ Random\ player\ chosen\ as\ first\ turn,\ players\ take\ turns\ clockwise(predetermined\ order\r\n\ @param\ currentTurn\ current\ run\ \r\n\ @param\ players\ players\ \r\n\ @param\ rooms\ rooms\ \r\n
comment20.params=name
comment20.target=void\ updateCurrentPlayer(java.lang.String)
comment20.text=\r\n\ Keeps\ track\ of\ who\ the\ current\ player\ is\ \r\n\ @param\ name\ name\ \r\n
comment21.params=
comment21.target=void\ repaintInputField()
comment21.text=\r\n\ \r\n\ Iterface\ colour\ for\ input\ field\r\n\ @param\ gameCurrentPlayer\ current\ player\ game\ \r\n
comment22.params=
comment22.target=void\ repaintGameBoardButtonGrid()
comment22.text=\r\n\ Interface\ for\ the\ board\ button\ \r\n\ @param\ gameBoard\ game\ baord\ \r\n
comment23.params=aPanel\ r\ c
comment23.target=void\ generateGameButtonGrid(javax.swing.JPanel,\ int,\ int)
comment23.text=\r\n\ Generates\ the\ Interface\ for\ the\ game\ button\ grid\ \r\n\ @param\ aPanel\ panel\ \r\n
comment24.params=
comment24.target=void\ inputFieldContent()
comment24.text=\r\n\ Accusation\ and\ suggestion\ interface\ \r\n\ Weapon\ person\ and\ room\ selection\ menu\ \r\n\ @param\ accuseButton\ button\ to\ accuse\r\n\ @param\ weaponSelectionList\ list\ to\ select\ weapons\ \r\n\ @param\ personSelectionList\ list\ to\ select\ persons\ \r\n\ @param\ roomselectionList\ list\ to\ select\ rooms\ \r\n
comment25.params=e
comment25.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment26.params=e
comment26.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment27.params=e
comment27.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment28.params=e
comment28.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment29.params=e
comment29.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment3.params=
comment3.target=void\ rollDices()
comment3.text=\r\n\ Rolls\ the\ dice\ and\ warns\ player\ whether\ it\ can\ be\ used\ or\ not\ \r\n\ @param\ dice\ dice\ in\ the\ game\ \r\n
comment30.params=e
comment30.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment31.params=e
comment31.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment32.params=e
comment32.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment33.params=e
comment33.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment34.params=e
comment34.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment35.params=
comment35.target=void\ viewMyCards()
comment35.text=\r\n\ \r\n\ Interface\ to\ view\ cards\ \ \r\n\ @param\ cardView\ view\ card\ \r\n
comment36.params=
comment36.target=void\ makeAccusation()
comment36.text=\r\n\ Interface\ to\ make\ an\ accusation\ \r\n\ @param\ JPanel\ panel\ for\ interface\ \r\n
comment37.params=e
comment37.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment38.params=weaponSelected\ personSelected
comment38.target=void\ makeSuggestion(java.lang.String,\ java.lang.String)
comment38.text=\r\n\ \r\n\ Allows\ to\ make\ a\ suggestion\ by\ choosing\ a\ weapon,\ person,\ room\ \r\n\ @param\ weaponSelected\ selected\ weapon\ \r\n\ @param\ personSelected\ selected\ person\ \r\n
comment39.params=
comment39.target=void\ roomExitSelection()
comment39.text=\r\n\ Selects\ exit\ rooms\ \r\n\ @param\ roomSelectionList\r\n
comment4.params=
comment4.target=void\ nextTurn()
comment4.text=\r\n\ Checks\ who\ the\ current\ player\ in\ the\ current\ turn\ is\ in\ order\ to\ update\ and\ change\ to\ the\ next\ player\ \ \r\n\ @param\ turn\ \r\n
comment40.params=name
comment40.target=int\ getPlayerIndexByName(java.lang.String)
comment40.text=\r\n\ Gets\ the\ index\ of\ the\ player\ by\ name\ \r\n\ @param\ name\ name\ of\ the\ player\ \r\n
comment41.params=name
comment41.target=int\ getRoomIndexByName(java.lang.String)
comment41.text=\r\n\ Gets\ the\ index\ of\ the\ room\ by\ name\ \r\n\ @param\ name\ name\ of\ the\ room\ \r\n
comment42.params=exitName
comment42.target=void\ roomExitProtocol(java.lang.String)
comment42.text=\r\n\ Coordinates\ for\ the\ door\ to\ exit\ a\ room\ \r\n\ @param\ exitName\ name\ of\ the\ exit\ door\ \r\n
comment43.params=x\ y
comment43.target=void\ doorExit(int,\ int)
comment43.text=\r\n\ Exit\ door\ instance\ \r\n\ @param\ x\r\n\ @param\ y\r\n
comment44.params=roomName
comment44.target=void\ roomSecretPath(java.lang.String)
comment44.text=\r\n\ Allows\ to\ get\ to\ the\ secret\ path\ \r\n\ @param\ roomName\ name\ of\ the\ room\ \r\n
comment45.params=roomName
comment45.target=java.lang.String[]\ roomExitList(java.lang.String)
comment45.text=\r\n\ \r\n\ Lists\ of\ exit\ doors\ \r\n\ @param\ roomName\ name\ of\ the\ room\ \r\n
comment46.params=tokenName
comment46.target=java.awt.Color\ playerTilePaint(java.lang.String)
comment46.text=\r\n\ \r\n\ Coloured\ player\ tile\ interface\r\n@param\ tokenName\ name\ of\ the\ token\r\n
comment47.params=tokenName
comment47.target=java.lang.String\ playerTileName(java.lang.String)
comment47.text=\r\n\ Player\ name\ tile\ initials\ \r\n\ @param\ tokenName\ name\ of\ the\ token\r\n
comment48.params=tileTag
comment48.target=java.awt.Color\ tileTypePainter(java.lang.String)
comment48.text=\r\n\ Colours\ the\ grid\ tiles\ depedning\ on\ the\ rooms\ and\ whther\ they're\ a\ spawn\ or\ door\r\n\ @param\ tileTag\ tags\ for\ the\ tiles\ \r\n
comment5.params=
comment5.target=void\ makePlayers()
comment5.text=\r\n\ Generates\ and\ adds\ players\ to\ the\ game\ \r\n\ @param\ players\ players\ \r\n
comment6.params=
comment6.target=void\ updatePlayerGrid()
comment6.text=\r\n\ Updates\ the\ grid\ by\ getting\ the\ name,\ position\ of\ players\r\n\ @param\ players\ players\ \r\n
comment7.params=
comment7.target=void\ generateSpawnPoints()
comment7.text=\r\n\ Generates\ spawn\ points\ \r\n\ @param\ spawnPoints\ spawn\ points\r\n
comment8.params=
comment8.target=void\ makeRooms()
comment8.text=\r\n\ Generates\ and\ adds\ all\ rooms\r\n\ @param\ rooms\ rooms\ \r\n
comment9.params=name\ xMod\ yMod
comment9.target=boolean\ playerMovementChecker(java.lang.String,\ int,\ int)
comment9.text=\r\n\ Keeps\ in\ check\ the\ movements\ of\ each\ player\ in\ the\ grid\ and\ lets\ players\ enter\ rooms\ through\ the\ door\r\n\ @param\ name\ name\ \r\n
numComments=49
